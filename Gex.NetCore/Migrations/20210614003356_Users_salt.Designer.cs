// <auto-generated />
using System;
using Gex.NetCore.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Gex.NetCore.Migrations
{
    [DbContext(typeof(GexContext))]
    [Migration("20210614003356_Users_salt")]
    partial class Users_salt
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Gex.NetCore.Models.Cursos", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<int>("CantAlumnos")
                        .HasColumnType("int");

                    b.Property<int?>("CicloLectivo")
                        .HasColumnType("int");

                    b.Property<string>("Comision")
                        .HasColumnType("text");

                    b.Property<int>("Cuatrimestre")
                        .HasColumnType("int");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cursos");
                });

            modelBuilder.Entity("Gex.NetCore.Models.Examenes", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long?>("CursoId")
                        .HasColumnType("bigint");

                    b.Property<byte>("Estado")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<long?>("MateriaId")
                        .HasColumnType("bigint");

                    b.Property<int?>("MinTardanza")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("text");

                    b.Property<int?>("NotaPromo")
                        .HasColumnType("int");

                    b.Property<int?>("NotaRegular")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.HasIndex("MateriaId");

                    b.ToTable("Examenes");
                });

            modelBuilder.Entity("Gex.NetCore.Models.FailedJobs", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Connection")
                        .HasColumnType("text");

                    b.Property<string>("Exception")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("FailedAt")
                        .HasColumnType("timestamp");

                    b.Property<string>("Payload")
                        .HasColumnType("text");

                    b.Property<string>("Queue")
                        .HasColumnType("text");

                    b.Property<string>("Uuid")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("FailedJobs");
                });

            modelBuilder.Entity("Gex.NetCore.Models.Materias", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Materias");
                });

            modelBuilder.Entity("Gex.NetCore.Models.MateriasCursos", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long?>("CursoId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaInicio")
                        .HasColumnType("datetime");

                    b.Property<long?>("MateriaId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.HasIndex("MateriaId");

                    b.ToTable("MateriasCursos");
                });

            modelBuilder.Entity("Gex.NetCore.Models.Mesas", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long?>("ExamenId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<byte?>("MostrarRespuestas")
                        .HasColumnType("tinyint");

                    b.Property<long?>("ProfesorId")
                        .HasColumnType("bigint");

                    b.Property<string>("ProfesorId1")
                        .HasColumnType("varchar(767)");

                    b.HasKey("Id");

                    b.HasIndex("ExamenId");

                    b.HasIndex("ProfesorId1");

                    b.ToTable("Mesas");
                });

            modelBuilder.Entity("Gex.NetCore.Models.MesasAlumnos", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long?>("AlumnoId")
                        .HasColumnType("bigint");

                    b.Property<string>("AlumnoId1")
                        .HasColumnType("varchar(767)");

                    b.Property<byte>("Estado")
                        .HasColumnType("tinyint");

                    b.Property<long?>("MesaId")
                        .HasColumnType("bigint");

                    b.Property<string>("Nota")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AlumnoId1");

                    b.HasIndex("MesaId");

                    b.ToTable("MesasAlumnos");
                });

            modelBuilder.Entity("Gex.NetCore.Models.PersonalAccessTokens", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Abilities")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<DateTimeOffset?>("LastUsedAt")
                        .HasColumnType("timestamp");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Token")
                        .HasColumnType("text");

                    b.Property<long>("TokenableId")
                        .HasColumnType("bigint");

                    b.Property<string>("TokenableType")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.ToTable("PersonalAccessTokens");
                });

            modelBuilder.Entity("Gex.NetCore.Models.Preguntas", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long?>("ExamenId")
                        .HasColumnType("bigint");

                    b.Property<int>("Puntos")
                        .HasColumnType("int");

                    b.Property<int?>("Tipo")
                        .HasColumnType("int");

                    b.Property<string>("Valor")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ExamenId");

                    b.ToTable("Preguntas");
                });

            modelBuilder.Entity("Gex.NetCore.Models.Respuestas", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<byte?>("Correcto")
                        .HasColumnType("tinyint");

                    b.Property<long?>("PreguntaId")
                        .HasColumnType("bigint");

                    b.Property<string>("Valor")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PreguntaId");

                    b.ToTable("Respuestas");
                });

            modelBuilder.Entity("Gex.NetCore.Models.RespuestasAlumnos", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long?>("AlumnoId")
                        .HasColumnType("bigint");

                    b.Property<string>("AlumnoId1")
                        .HasColumnType("varchar(767)");

                    b.Property<byte>("Estado")
                        .HasColumnType("tinyint");

                    b.Property<long?>("RespuestaId")
                        .HasColumnType("bigint");

                    b.Property<string>("Valor")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AlumnoId1");

                    b.HasIndex("RespuestaId");

                    b.ToTable("RespuestasAlumnos");
                });

            modelBuilder.Entity("Gex.NetCore.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(767)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("CurrentTeamId")
                        .HasColumnType("bigint");

                    b.Property<long?>("Dni")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("EmailVerifiedAt")
                        .HasColumnType("timestamp");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("text");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("text");

                    b.Property<string>("Observation")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("ProfilePhotoPath")
                        .HasColumnType("text");

                    b.Property<string>("RememberToken")
                        .HasColumnType("text");

                    b.Property<string>("Salt")
                        .HasColumnType("text");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("TwoFactorRecoveryCodes")
                        .HasColumnType("text");

                    b.Property<string>("TwoFactorSecret")
                        .HasColumnType("text");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Gex.NetCore.Models.Examenes", b =>
                {
                    b.HasOne("Gex.NetCore.Models.Cursos", "Curso")
                        .WithMany("Examenes")
                        .HasForeignKey("CursoId");

                    b.HasOne("Gex.NetCore.Models.Materias", "Materia")
                        .WithMany("Examenes")
                        .HasForeignKey("MateriaId");
                });

            modelBuilder.Entity("Gex.NetCore.Models.MateriasCursos", b =>
                {
                    b.HasOne("Gex.NetCore.Models.Cursos", "Curso")
                        .WithMany("MateriasCursos")
                        .HasForeignKey("CursoId");

                    b.HasOne("Gex.NetCore.Models.Materias", "Materia")
                        .WithMany("MateriasCursos")
                        .HasForeignKey("MateriaId");
                });

            modelBuilder.Entity("Gex.NetCore.Models.Mesas", b =>
                {
                    b.HasOne("Gex.NetCore.Models.Examenes", "Examen")
                        .WithMany("Mesas")
                        .HasForeignKey("ExamenId");

                    b.HasOne("Gex.NetCore.Models.User", "Profesor")
                        .WithMany("Mesas")
                        .HasForeignKey("ProfesorId1");
                });

            modelBuilder.Entity("Gex.NetCore.Models.MesasAlumnos", b =>
                {
                    b.HasOne("Gex.NetCore.Models.User", "Alumno")
                        .WithMany("MesasAlumnos")
                        .HasForeignKey("AlumnoId1");

                    b.HasOne("Gex.NetCore.Models.Mesas", "Mesa")
                        .WithMany("MesasAlumnos")
                        .HasForeignKey("MesaId");
                });

            modelBuilder.Entity("Gex.NetCore.Models.Preguntas", b =>
                {
                    b.HasOne("Gex.NetCore.Models.Examenes", "Examen")
                        .WithMany("Preguntas")
                        .HasForeignKey("ExamenId");
                });

            modelBuilder.Entity("Gex.NetCore.Models.Respuestas", b =>
                {
                    b.HasOne("Gex.NetCore.Models.Preguntas", "Pregunta")
                        .WithMany("Respuestas")
                        .HasForeignKey("PreguntaId");
                });

            modelBuilder.Entity("Gex.NetCore.Models.RespuestasAlumnos", b =>
                {
                    b.HasOne("Gex.NetCore.Models.User", "Alumno")
                        .WithMany("RespuestasAlumnos")
                        .HasForeignKey("AlumnoId1");

                    b.HasOne("Gex.NetCore.Models.Respuestas", "Respuesta")
                        .WithMany("RespuestasAlumnos")
                        .HasForeignKey("RespuestaId");
                });
#pragma warning restore 612, 618
        }
    }
}
